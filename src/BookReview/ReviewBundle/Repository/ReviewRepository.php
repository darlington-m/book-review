<?php

namespace BookReview\ReviewBundle\Repository;

/**
 * ReviewRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReviewRepository extends \Doctrine\ORM\EntityRepository
{
    public function getLatest($limit, $offset)
    {
        $queryBuilder = $this->createQueryBuilder('review');
        $queryBuilder->orderBy('review.timestamp', 'DESC')
            ->setFirstResult($offset)
            ->setMaxResults($limit);
        $query = $queryBuilder->getQuery();
        return $query->getResult();
    }

    public function getLatestForBooks($limit)
    {
        $queryBuilder = $this->createQueryBuilder('review');
        $queryBuilder
            ->orderBy('review.timestamp', 'DESC')
            ->setMaxResults($limit)
            //->groupBy('review.book')
        ;
        $query = $queryBuilder->getQuery();
        return $query->getResult();
    }

    public function getRecent($limit, $offset)
    {
        $queryBuilder = $this->createQueryBuilder('review');
        $queryBuilder->orderBy('review.timestamp', 'DESC')
            ->setFirstResult($offset)
            ->setMaxResults($limit);
        $query = $queryBuilder->getQuery();
        return $query->getResult();
    }

    public function getTopRated($limit, $offset)
    {
        $queryBuilder = $this->createQueryBuilder('review');
        $queryBuilder
            ->select()
            ->orderBy('review.timestamp', 'DESC')
            ->setFirstResult($offset)
            ->setMaxResults($limit);
        $query = $queryBuilder->getQuery();
        return $query->getResult();
    }

    public function getUserReviews($id)
    {
        $queryBuilder = $this->createQueryBuilder('review');
        $queryBuilder
            ->orderBy('review.timestamp', 'DESC')
            ->where('review.reviewer = :id')
            ->setParameter('id', $id)
        ;
        $query = $queryBuilder->getQuery();
        return $query->getResult();
    }

}
